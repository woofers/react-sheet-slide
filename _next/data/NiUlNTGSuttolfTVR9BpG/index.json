{"pageProps":{"code":"var Component=(()=>{var a=Object.create;var s=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var f=(t,r)=>()=>(r||t((r={exports:{}}).exports,r),r.exports),g=(t,r)=>{for(var o in r)s(t,o,{get:r[o],enumerable:!0})},i=(t,r,o,n)=>{if(r&&typeof r==\"object\"||typeof r==\"function\")for(let l of p(r))!m.call(t,l)&&l!==o&&s(t,l,{get:()=>r[l],enumerable:!(n=h(r,l))||n.enumerable});return t};var b=(t,r,o)=>(o=t!=null?a(u(t)):{},i(r||!t||!t.__esModule?s(o,\"default\",{value:t,enumerable:!0}):o,t)),y=t=>i(s({},\"__esModule\",{value:!0}),t);var c=f((C,d)=>{d.exports=_jsx_runtime});var v={};g(v,{default:()=>k});var e=b(c());function w(t={}){let{wrapper:r}=t.components||{};return r?(0,e.jsx)(r,Object.assign({},t,{children:(0,e.jsx)(o,{})})):o();function o(){let n=Object.assign({h1:\"h1\",p:\"p\",code:\"code\",a:\"a\",h2:\"h2\",ul:\"ul\",li:\"li\",strong:\"strong\",pre:\"pre\"},t.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.h1,{children:\"react-sheet-slide\"}),`\n`,(0,e.jsx)(n.p,{children:\"\\u{1F3DE}\\uFE0F \\u{1F3A2} \\u{1F6DD} A responsive React draggable sheet and dialog component.\"}),`\n`,(0,e.jsxs)(n.p,{children:[`No more hard to use and dismiss modal experiences for mobile users.\nInstead `,(0,e.jsx)(n.code,{children:\"react-sheet-slide\"}),` provides a fully draggable sheet\nthat properly blocks weird overscrolling and focus bugs.  Then on desktop\nthis component optionally supports a fully-featured modal.\nAlterativly the sheet can be used on desktop as-well if so desired.`]}),`\n`,(0,e.jsxs)(n.p,{children:[\"This library is largely based on the fantastic \",(0,e.jsx)(n.a,{href:\"https://github.com/stipsan/react-spring-bottom-sheet\",children:\"react-spring-bottom-sheet\"}),\".  While \",(0,e.jsx)(n.a,{href:\"https://github.com/stipsan/react-spring-bottom-sheet\",children:\"react-spring-bottom-sheet\"}),\" is much more feature-packed than \",(0,e.jsx)(n.code,{children:\"react-sheet-slide\"}),`, supporting more props like many different callbacks on sheet snap start/end.\nHowever the extra dependencies like `,(0,e.jsx)(n.code,{children:\"xstate\"}),\" and the \",(0,e.jsx)(n.code,{children:\"resize-observer\"}),` polyfill can lead to a larger bundle size.\nAlso using `,(0,e.jsx)(n.code,{children:\"react-spring\"}),` as a dependencies instead of a peer dependencies limits users of the library from\ncontrolling the version of `,(0,e.jsx)(n.code,{children:\"react-spring\"}),\" they use. It can also lead to 2 versions of \",(0,e.jsx)(n.code,{children:\"react-spring\"}),` being bundled,\nif the user is using a newer or older major version than the library.`]}),`\n`,(0,e.jsxs)(n.p,{children:[\"By simplifying the API these libraries can be removed, and by moving \",(0,e.jsx)(n.code,{children:\"react-spring\"}),` to a peer dependencies\nmakes the library have a much lighther footprint.  Also `,(0,e.jsx)(n.code,{children:\"react-sheet-slide\"}),` includes a\ndark mode and a fully-featured desktop modal that can be enabled for non-mobile users.\nIt also adds support for a backdrop animation similar to Apple's UIKit.`]}),`\n`,(0,e.jsx)(n.h2,{children:\"Features\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsx)(n.li,{children:\"Responsive way to display blocking modal-like content on mobile web-apps.\"}),`\n`,(0,e.jsxs)(n.li,{children:[\"Accessible with proper scroll & focus blocking, with \",(0,e.jsx)(n.code,{children:\"Esc\"}),\" to close on desktop.\"]}),`\n`,(0,e.jsx)(n.li,{children:\"Supports dark and light mode out of the box\"}),`\n`,(0,e.jsx)(n.li,{children:\"Customizable detents\"}),`\n`,(0,e.jsx)(n.li,{children:\"Similar API to Apple's UIKit sheet\"}),`\n`,(0,e.jsx)(n.li,{children:\"Supports Server-Side rendering.\"}),`\n`,(0,e.jsx)(n.li,{children:\"Built with css-modules (no styled-in-js library needed)\"}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{children:\"Installation\"}),`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\"Yarn\"})}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-yarn\",children:`yarn add react-sheet-slide @react-spring/web@^9 @use-gesture/react@^10\n`})}),`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\"npm\"})}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-npm\",children:`npm install react-sheet-slide @react-spring/web@^9 @use-gesture/react@^10\n`})}),`\n`,(0,e.jsx)(n.h2,{children:\"Usage\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-jsx\",children:`import React, { useState, useRef } from 'react'\nimport { Sheet, Header, Content, Footer, detents, Portal } from 'react-sheet-slide'\nimport 'react-sheet-slide/style.css'\n\nconst App = () => {\n  const [open, setOpen] = useState(false)\n  const ref = useRef()\n  return (\n    <>\n      <button type=\"button\" onClick={() => setOpen(true)}>\n        Open sheet\n      </button>\n      <Portal>\n        <Sheet\n          ref={ref}\n          open={open}\n          onDismiss={() => setOpen(false)}\n          onClose={() => {\n            console.log('Component unmounted')\n          }}\n          selectedDetent={detents.large}\n          detents={props => [\n            detents.large(props),\n            detents.medium(props)\n          ]}\n          useDarkMode={false}\n          useModal={false}\n        >\n          <Header>Title</Header>\n          <Content>\n            <div>Add more storage to keep everything on online</div>\n            <div>\n              Online includes plenty of storage to keep all your data safe and\n              features to protect your privacy.\n            </div>\n            <div>Learn More About Online</div>\n          </Content>\n          <Footer>\n            <button type=\"button\" onClick={() => setOpen(false)}>\n              Close\n            </button>\n          </Footer>\n        </Sheet>\n      </Portal>\n    </>\n  )\n}\n`})}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.code,{children:\"react-sheet-slide\"}),\" includes a \",(0,e.jsx)(n.code,{children:\"Portal\"}),` component however other portal can be used like\n`,(0,e.jsx)(n.code,{children:\"@reach/portal\"}),\" or \",(0,e.jsx)(n.code,{children:\"@mui/base\"}),\".  The one included is just of modified version of \",(0,e.jsx)(n.code,{children:\"@reach/portal\"}),\" however with support for string refs and defaults to \",(0,e.jsx)(n.code,{children:\"body\"}),\".\"]}),`\n`,(0,e.jsx)(n.h2,{children:\"Props\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.code,{children:\"open\"})}),`\n`,(0,e.jsxs)(n.p,{children:[`Set if the sheet is open.  When this prop is changed the sheet\nwill animate and the unmount/remount.  When the component fully unmounts, `,(0,e.jsx)(n.code,{children:\"onClose\"}),\" will be called.\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.code,{children:\"onDismiss\"})}),`\n`,(0,e.jsxs)(n.p,{children:[\"Called when the sheet is dragged down or the user clicks on the backdrop.  Also called when the user presses \",(0,e.jsx)(n.code,{children:\"Esc\"}),`.\nThis method should include `,(0,e.jsx)(n.code,{children:\"setOpen(false)\"}),\" to ensure \",(0,e.jsx)(n.code,{children:\"open\"}),\" is false.  Otherwise the sheet may not close properly.\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.code,{children:\"onClose\"})}),`\n`,(0,e.jsx)(n.p,{children:\"Called when the sheet finishes the close animation and is fully unmounted.\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.code,{children:\"selectedDetent\"})}),`\n`,(0,e.jsx)(n.p,{children:\"The default detent size that the sheet will open to.\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.code,{children:\"detents\"})}),`\n`,(0,e.jsxs)(n.p,{children:[\"List of available detents that the sheet will catch on.  Reccomened to set to either \",(0,e.jsx)(n.code,{children:\"detents.large\"}),\" or \",(0,e.jsx)(n.code,{children:\"props => [detents.large(props), detents.medium(props)]\"}),`\nto mimic the UIKit behaviour however can be customized using the callback.`]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.code,{children:\"useDarkMode\"})}),`\n`,(0,e.jsxs)(n.p,{children:[\"Prop to control if dark mode is enabled.  By default this will use the system \",(0,e.jsx)(n.code,{children:\"prefers-color-scheme\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.code,{children:\"useModal\"})}),`\n`,(0,e.jsxs)(n.p,{children:[\"Prop to control when a modal should be used instead of a sheet.  If your app will likely only be used on mobile \",(0,e.jsx)(n.code,{children:\"useModal={false}\"}),` is reccomened.\nOtherwise it will default to true on any device larger than `,(0,e.jsx)(n.code,{children:\"(max-width: 640px)\"}),\" to use a modal on desktop.\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.code,{children:\"ref\"})}),`\n`,(0,e.jsx)(n.p,{children:\"The sheet also supports forwarding a ref that will be added onto the sheet root.\"}),`\n`]}),`\n`]})]})}}var k=w;return y(v);})();\n;return Component;","frontmatter":{}},"__N_SSG":true}